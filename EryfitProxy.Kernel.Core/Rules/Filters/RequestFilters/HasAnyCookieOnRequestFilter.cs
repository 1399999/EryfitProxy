

using System.Collections.Generic;
using System.Linq;
using EryfitProxy.Kernel.Clients.H2.Encoder;
using EryfitProxy.Kernel.Core;
using EryfitProxy.Kernel.Formatters.Producers.Requests;

namespace EryfitProxy.Kernel.Rules.Filters.RequestFilters
{
    [FilterMetaData(
        LongDescription = "Select exchanges having any request cookie"
    )]
    public class HasAnyCookieOnRequestFilter : Filter
    {
        public override FilterScope FilterScope => FilterScope.RequestHeaderReceivedFromClient;

        public override string AutoGeneratedName => "Having any request cookie";

        public override string GenericName => "Cookie";

        public override string ShortName => "Has any cookie";

        public override bool PreMadeFilter => true;

        protected override bool InternalApply(
            ExchangeContext? exchangeContext, IAuthority authority, IExchange? exchange,
            IFilteringContext? filteringContext)
        {
            if (exchange == null)
                return false;

            var requestCookies =
                HttpHelper.ReadRequestCookies(exchange.GetRequestHeaders().Select(h => (GenericHeaderField) h));

            return requestCookies.Any();
        }

        public override IEnumerable<FilterExample> GetExamples()
        {
            var defaultSample = GetDefaultSample();

            if (defaultSample != null)
                yield return defaultSample;
        }
    }
}
